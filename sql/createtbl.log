(c) Copyright IBM Corporation 1993,2007
Command Line Processor for DB2 Client 11.5.8.0

You can issue database manager commands and SQL statements from the command 
prompt. For example:
    db2 => connect to sample
    db2 => bind sample.bnd

For general help, type: ?.
For command help, type: ? command, where command can be
the first few keywords of a database manager command. For example:
 ? CATALOG DATABASE for help on the CATALOG DATABASE command
 ? CATALOG          for help on all of the CATALOG commands.

To exit db2 interactive mode, type QUIT at the command prompt. Outside 
interactive mode, all commands must be prefixed with 'db2'.
To list the current command option settings, type LIST COMMAND OPTIONS.

For more detailed help, refer to the Online Reference Manual.

db2 => db2 => db2 => db2 => db2 => CONNECT TO COMP421

   Database Connection Information

 Database server        = DB2/LINUXX8664 11.5.8.0
 SQL authorization ID   = CS421G01
 Local database alias   = COMP421


db2 => db2 => db2 => db2 => db2 => db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE Users ( UserID INTEGER NOT NULL, EmailAddress VARCHAR(100), DOB DATE, PRIMARY KEY(UserID) )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE RegisteredUsers ( UserID INTEGER NOT NULL, Username VARCHAR(30), Password VARCHAR(30), CreditCard VARCHAR(30), ExpiryDate DATE, Location VARCHAR(30), PreferredType VARCHAR(30), PreferredGenre VARCHAR(30), PRIMARY KEY(UserID), FOREIGN KEY(UserID) REFERENCES Users )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE Layouts ( TypeID INTEGER NOT NULL, FloorCapacity Integer CHECK(FloorCapacity >= 0), PRIMARY KEY(TypeID) )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE Events ( EID INTEGER NOT NULL, AgeRestriction INTEGER CHECK(AgeRestriction >= 0), StartDate DATE, StartTime Time, DURATION INTEGER, TypeID INTEGER NOT NULL, PRIMARY KEY(EID), FOREIGN KEY(TypeID) REFERENCES Layouts )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE Performances ( EID INTEGER NOT NULL, PerformanceType VARCHAR(30), Entertainer VARCHAR(30), PRIMARY KEY(EID), FOREIGN KEY(EID) REFERENCES Events )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE SportGames ( EID INTEGER NOT NULL, AwayTeam VARCHAR(30), HomeTeam VARCHAR(30), GameType VARCHAR(30), PRIMARY KEY(EID), FOREIGN KEY(EID) REFERENCES Events )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE Sponsors ( SID INTEGER NOT NULL, SponsorName VARCHAR(30), SponsorType VARCHAR(30), PRIMARY KEY(SID) )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE Sections ( SectionNumber INTEGER NOT NULL, Capacity INTEGER, PRIMARY KEY(SectionNumber) )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE Seats ( SectionNumber INTEGER NOT NULL, SeatNumber INTEGER NOT NULL, RowNumber INTEGER NOT NULL, Aisle VARCHAR(30), PRIMARY KEY(SectionNumber, SeatNumber, RowNumber), FOREIGN KEY(SectionNumber) REFERENCES Sections )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE Tickets ( TicketID INTEGER NOT NULL, Price FLOAT, DesignatedEntrance INTEGER, UserID INTEGER, PurchaseDate DATE, EID INTEGER NOT NULL, PRIMARY KEY(TicketID), FOREIGN KEY(UserID) REFERENCES Users, FOREIGN KEY(EID) REFERENCES Events )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE SeatedTickets ( TicketID INTEGER NOT NULL, isVIP BOOLEAN, SeatNumber INTEGER NOT NULL, RowNumber INTEGER NOT NULL, SectionNumber INTEGER NOT NULL, PRIMARY KEY(TicketID), FOREIGN KEY(TicketID) REFERENCES Tickets, FOREIGN KEY(SeatNumber, RowNumber, SectionNumber) REFERENCES Seats )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE FloorTickets ( TicketID INTEGER NOT NULL, BraceletRequired BOOLEAN, PRIMARY KEY(TicketID), FOREIGN KEY(TicketID) REFERENCES Tickets )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE Sponsorship ( EID INTEGER NOT NULL, SID INTEGER NOT NULL, PRIMARY KEY(EID, SID), FOREIGN KEY(EID) REFERENCES Events, FOREIGN KEY(SID) REFERENCES Sponsors )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE HasAvailable ( TypeID INTEGER NOT NULL, SectionNumber INTEGER NOT NULL, PRIMARY KEY(TypeID, SectionNumber), FOREIGN KEY(TypeID) REFERENCES Layouts, FOREIGN KEY(SectionNumber) REFERENCES Sections )
DB20000I  The SQL command completed successfully.

db2 => 